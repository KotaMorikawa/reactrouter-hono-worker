services:
  # バックエンド API (Hono + Cloudflare Workers)
  backend:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.backend
    ports:
      - "8787:8787"
    environment:
      - NODE_ENV=development
      - ENVIRONMENT=development
      - JWT_SECRET=dev-jwt-secret-key-docker
      - JWT_REFRESH_SECRET=dev-refresh-secret-key-docker
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/auth_database
    volumes:
      - ./apps/backend:/app/apps/backend
      - ./packages:/app/packages
      - /app/node_modules
      - /app/apps/backend/node_modules
    working_dir: /app/apps/backend
    command: npm run dev:node
    depends_on:
      - postgres
      - redis
    networks:
      - app-network

  # フロントエンド (React Router v7)
  frontend:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.frontend
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
      - ENVIRONMENT=development
      - API_URL=http://backend:8787
    volumes:
      - ./apps/frontend:/app/apps/frontend
      - ./packages:/app/packages
      - /app/node_modules
      - /app/apps/frontend/node_modules
    working_dir: /app/apps/frontend
    command: npm run dev -- --host 0.0.0.0
    depends_on:
      - backend
    networks:
      - app-network

  # データベース (PostgreSQL - 将来的にCloudflare D1の代替として)
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=auth_database
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  # Redis (開発環境でのセッション管理用)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: